services:
  - type: web
    name: portfolio
    env: python
    plan: free
    autoDeploy: true
    buildCommand: |
      pip install -r requirements.txt
      python manage.py collectstatic --noinput
      python manage.py migrate
      # Crea/actualiza superusuario (idempotente) en una sola l√≠nea
      python manage.py shell -c "from django.contrib.auth import get_user_model as g; import os; U=g(); u=os.getenv('DJANGO_SUPERUSER_USERNAME','admin'); e=os.getenv('DJANGO_SUPERUSER_EMAIL','you@example.com'); p=os.getenv('DJANGO_SUPERUSER_PASSWORD','Admin123!2025'); usr=U.objects.filter(username=u).first(); (usr and (setattr(usr,'is_staff',True), setattr(usr,'is_superuser',True), usr.set_password(p), usr.save())) or U.objects.create_superuser(u,e,p); print('superuser ready:', u)"
    startCommand: gunicorn portfolio.wsgi:application
    healthCheckPath: /
    envVars:
      - key: SECRET_KEY
        generateValue: true
      - key: DEBUG
        value: false
      - key: ALLOWED_HOSTS
        value: $RENDER_EXTERNAL_HOSTNAME
      - key: CSRF_TRUSTED_ORIGINS
        value: "https://$RENDER_EXTERNAL_HOSTNAME"
      - key: DATABASE_URL
        fromDatabase:
          name: portfolio-db
          property: connectionString
      # Si usas Cloudinary, pon tu URL ENTRE COMILLAS:
      - key: CLOUDINARY_URL
        value: "cloudinary://894879829965278:FQZgePwXoPUyTKA8W7FBUu9BLQM@dgkhksmoh"
      # Credenciales para el superusuario creado en buildCommand:
      - key: DJANGO_SUPERUSER_USERNAME
        value: admin
      - key: DJANGO_SUPERUSER_EMAIL
        value: you@example.com
      - key: DJANGO_SUPERUSER_PASSWORD
        value: Admin123!2025

databases:
  - name: portfolio-db
    plan: free
    ipAllowList: []
